syntax = "proto3";

package api.nft_transfer.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "nft_transfer/api/nft_transfer/v1;v1";
option java_multiple_files = true;
option java_package = "api.nft_transfer.v1";

service NftTransfer {
	rpc GetNftTransfer (GetNftTransferRequest) returns (GetNftTransferReply){
		option (google.api.http) = {
			get: "/v1/nfttransfer/getnfttransfer"
		};
	};
}


message GetNftTransferRequest {
	string address = 1[(validate.rules).string.min_len = 1];
	string network=2;
	string type=3;
	string order_by=4;
	string order_direction=5;
	uint64 limit=6;
	uint64 cursor=7;
}

message GetNftTransferReply {
	int32 code = 1;
	string reason = 2;
	string message = 3;
	PnftTransferSt data = 4;
}

message PnftTransferSt {
	uint64 cursor = 1;
	uint64 total = 2;
	repeated NodeStArr result = 3;
}

message NodeStArr {
	string  timestamp = 1;
	string  hash = 2;
	string  owner = 3;
	string  address_from=4[json_name = "address_from"];
	string  address_to=5[json_name = "address_to"];
	string  network =6;
	string  tag=7;
	string  type= 8;
	repeated ActionStArr actions = 9;
}
message ActionStArr {
	string  tag= 1;
	string  type= 2;
	uint32  index=3;
	string  address_from=4[json_name = "address_from"];
	string  address_to=5[json_name = "address_to"];
	CostSt cost = 6;
	string contract_address = 7;
	string token_id = 8;
}

message CostSt {
	string symbol = 1;
	string value = 2;
	uint32 decimals = 3;
}